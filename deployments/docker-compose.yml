version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: ..
      dockerfile: deployments/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - MODEL_PATH=models/best_model.ckpt
      - LABEL_MAPPING_PATH=configs/label_mapping.json
    volumes:
      - ../models:/app/models:ro
      - ../configs:/app/configs:ro
    depends_on:
      - redis
    networks:
      - incidentvision
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ..
      dockerfile: deployments/Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - incidentvision
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - incidentvision
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - incidentvision
    restart: unless-stopped

volumes:
  redis_data:

networks:
  incidentvision:
    driver: bridge